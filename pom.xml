<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.spark.geospatial</groupId>
    <artifactId>mhr-playground</artifactId>
    <version>trunk</version>

    <name>${project.artifactId}</name>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <spark.compatible.version>3.0</spark.compatible.version>
        <spark.major.version>3.2</spark.major.version>
        <spark.version>${spark.major.version}.1</spark.version>
        <scala.binary.version>2.12</scala.binary.version>
        <scala.version>${scala.binary.version}.14</scala.version>
        <spark-sedona.version>1.2.0-incubating</spark-sedona.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sedona</groupId>
            <artifactId>sedona-python-adapter-${spark.compatible.version}_${scala.binary.version}</artifactId>
            <version>${spark-sedona.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.sedona</groupId>
            <artifactId>sedona-viz-${spark.compatible.version}_${scala.binary.version}</artifactId>
            <version>${spark-sedona.version}</version>
        </dependency>
        <!-- Optional: https://mvnrepository.com/artifact/org.datasyslab/geotools-wrapper -->
        <dependency>
            <groupId>org.datasyslab</groupId>
            <artifactId>geotools-wrapper</artifactId>
            <version>1.1.0-25.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.davidmoten</groupId>
            <artifactId>geo</artifactId>
            <version>0.8.0</version>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.3.1</version>
                <executions>
                    <execution>
                        <configuration>
                            <args>
                                <arg>-Xmacro-settings:materialize-derivations</arg>
                                <arg>-language:experimental.macros</arg>
                            </args>
                            <jvmArgs>
                                <jvmArg>-Xms512m</jvmArg>
                                <jvmArg>-Xmx2048m</jvmArg>
                                <jvmArg>-Xss4m</jvmArg>
                            </jvmArgs>
                        </configuration>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antipathy</groupId>
                <artifactId>mvn-scalafmt_${scala.binary.version}</artifactId>
                <version>1.0.3</version>
                <configuration>
                    <configLocation>.scalafmt.conf</configLocation> <!-- path to config -->
                    <skipTestSources>false</skipTestSources> <!-- (Optional) skip formatting test sources -->
                    <skipSources>false</skipSources> <!-- (Optional) skip formatting main sources -->
                    <respectVersion>true</respectVersion> <!-- (Optional) fail if no version set in scalafmt.conf -->
                    <validateOnly>true</validateOnly> <!-- check formatting without changing files -->
                    <onlyChangedFiles>false</onlyChangedFiles>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>package-jar-with-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>assembly/uber-jar-with-meta-inf-merge.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>